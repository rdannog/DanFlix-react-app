{"version":3,"sources":["Services/MoviesApi.js","Components/RenderMovies/index.js","Services/ShowsApi.js","Components/RenderShows/index.js","Components/Home/index.js","App.js","index.js"],"names":["MoviesApi","axios","create","baseURL","GlobalStyle","createGlobalStyle","Container","styled","div","PostCard","Img","img","Poster","Overview","PosterAndOverview","Buttons","Movies","state","movies","getMovies","a","get","response","setState","data","results","poster","map","item","poster_path","this","title","release_date","src","overview","id","React","Component","ShowsApi","Shows","shows","getShows","name","first_air_date","Div","Card","style","paddingLeft","height","display","alignItems","Menu","nav","List","ul","Title","App","linkStyle","textDecoration","color","to","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f990127b.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst MoviesApi = axios.create({\n    baseURL:'https://api.themoviedb.org/3/movie/popular?api_key=0f6296ac61ec5966cd4f6b9f39a2b01c&language=en-US&page=1'\n})\nexport default MoviesApi","import React from 'react'\nimport { createGlobalStyle } from 'styled-components'\nimport styled from 'styled-components'\nimport MoviesApi from '../../Services/MoviesApi'\n\nconst GlobalStyle = createGlobalStyle`\nbody{\n  background-color:black;\n  color:white;\n  text-decoration:none;\n}\n`\nconst Container = styled.div`\ndisplay:flex;\nalign-items:center;\njustify-content:center;\nflex-direction: column;\n`\nconst PostCard = styled.div`\nborder: solid 2px black;\nwidth: 80vw;\nmargin: 1rem;\npadding: 5vh 5vw;\nlist-style:none;\ntext-align:center;\ndisplay: flex;\njustify-content:center;\nalign-items:center;\nflex-direction: column;\nborder-bottom: solid 3px white;\n\n`\nconst Img = styled.img`\nwidth:280px;\nborder: solid 2px black;\nborder-radius: 8px;\n`\nconst Poster = styled.div`\nwidth:50%;\ndisplay:flex;\nalign-items:center;\njustify-content:center;\n`\nconst Overview = styled.div`\nwidth:50%;\nfont-size: 1.2rem;\ndisplay:flex;\njustify-content:center;\nflex-direction:column;\n\n`\nconst PosterAndOverview = styled.div`\nwidth:100%;\ndisplay:flex;\nalign-items:center;\njustify-content: center;\n@media(max-width:900px){\n  flex-direction: column;\n}\n`\nconst Buttons = styled.div`\ndisplay:flex;\nalign-items:center;\njustify-content:center;\nflex-direction:column;\npadding:2rem;\nbutton{\n  background-color: red;\n  opacity:0.8;\n  width: 200px;\n  height:40px;\n  border: none;\n  border-radius: 8px;\n  margin-bottom:1rem;\n  cursor:pointer;\n  font-size: 1rem;\n  color:white;\n}\n`\n\nexport default class Movies extends React.Component {\n  state = {\n    movies: []\n  }\n\n  componentDidMount() {\n    this.getMovies()\n  }\n\n  getMovies = async () => {\n    const response = await MoviesApi.get()\n    this.setState({\n      movies: response.data.results\n    })\n    const poster = response.data.results.map(item => {\n      return {\n        ...item,\n        poster_path: `https://image.tmdb.org/t/p/w500${item.poster_path}`\n      };\n    });\n\n    this.setState({\n      movies: poster\n    });\n  }\n\n  render() {\n    return (\n      <Container>\n        <GlobalStyle />\n        {this.state.movies.map(\n          (item) => (\n            <PostCard key={item.id}>\n              <div>\n                <h1>{item.title}</h1>\n                <h3>({item.release_date})</h3>\n              </div>\n              <PosterAndOverview>\n                <Poster>\n                  <Img src={item.poster_path} />\n                </Poster>\n                <Overview> \n                  <p>{item.overview}</p>\n                  <Buttons>\n                    <button>Watch Here</button>\n                    <button>Download</button>\n                  </Buttons>\n                </Overview>\n              </PosterAndOverview>\n            </PostCard>\n          )\n        )}\n      </Container>\n    );\n  }\n}\n","import axios from 'axios'\n\nconst ShowsApi = axios.create({\n    baseURL:'https://api.themoviedb.org/3/tv/popular?api_key=0f6296ac61ec5966cd4f6b9f39a2b01c&language=en-US&page=1'\n})\nexport default ShowsApi","import React from 'react'\nimport {createGlobalStyle} from 'styled-components'\nimport styled from 'styled-components'\nimport ShowsApi from '../../Services/ShowsApi'\n\nconst GlobalStyle= createGlobalStyle`\nbody{\n  background-color:black;\n  color:white;\n}\n`\nconst Container = styled.div`\ndisplay:flex;\nalign-items:center;\njustify-content:center;\nflex-direction: column;\n`\nconst PostCard = styled.div`\nborder: solid 2px black;\nwidth: 80vw;\nmargin: 1rem;\npadding: 5vh 5vw;\nborder-bottom: solid 3px white;\nlist-style:none;\ntext-align:center;\ndisplay: flex;\njustify-content:center;\nalign-items:center;\nflex-direction: column;\n}\n`\nconst Img = styled.img`\nwidth:280px;\n`\nconst Poster= styled.div`\nwidth:50%;\ndisplay:flex;\nalign-items:center;\njustify-content:center;\n`\nconst Overview= styled.div`\nwidth:50%;\nfont-size: 1.2rem;\ndisplay:flex;\njustify-content:center;\nflex-direction:column;\n`\nconst PosterAndOverview = styled.div`\nwidth:100%;\ndisplay:flex;\nalign-items:center;\njustify-content: center;\n@media(max-width:900px){\n  flex-direction: column;\n}\n`\nconst Buttons = styled.div`\ndisplay:flex;\nalign-items:center;\njustify-content:center;\nflex-direction:column;\npadding:2rem;\nbutton{\n  background-color: red;\n  opacity:0.8;\n  width: 200px;\n  height:40px;\n  border: none;\n  border-radius: 8px;\n  margin-bottom:1rem;\n  cursor:pointer;\n  font-size: 1rem;\n  color:white;\n}\n`\n\nexport default class Shows extends React.Component {\n  state = {\n    shows: []\n  }\n\n  componentDidMount() {\n    this.getShows()\n  }\n\n  getShows = async () => {\n    const response = await ShowsApi.get()\n    this.setState({\n      shows: response.data.results\n    })\n    const poster = response.data.results.map(item => {\n      return {\n        ...item,\n        poster_path: `https://image.tmdb.org/t/p/w500${item.poster_path}`\n      };\n    });\n\n    this.setState({\n      shows: poster\n    });\n  }\n\n  render() {\n    return (\n      <Container>\n        <GlobalStyle/>\n        {this.state.shows.map(\n          (item) => (\n            <PostCard key={item.id}>\n              <div>\n                <h1>{item.name}</h1>\n                <h3>First air date: {item.first_air_date}</h3>\n              </div>\n              <PosterAndOverview>\n                <Poster>\n                  <Img src={item.poster_path}/>\n                  </Poster> \n                <Overview> \n                  <p>{item.overview}</p>\n                  <Buttons>\n                    <button>Watch Here</button>\n                    <button>Download</button>\n                  </Buttons>\n                </Overview>\n              </PosterAndOverview>\n            </PostCard>\n          )\n        )}\n      </Container>\n    );\n  }\n}\n","import React from 'react'\nimport {createGlobalStyle} from 'styled-components'\nimport styled from 'styled-components'\nimport ShowsApi from '../../Services/ShowsApi'\n\nconst GlobalStyle= createGlobalStyle`\nbody{\n  background-color:black;\n  color:white;\n}\n`\nconst Div = styled.div`\nwidth: 100%;\ndisplay: flex;\nalign-items:center;\njustify-content:center;\nflex-direction:row;\nflex-wrap: wrap;\n`\n\nconst Card = styled.div`\nwidth:18vw;\npadding: 5vh 2vw;\nmargin:2vh 1vw;\ndisplay: flex;\nalign-items:center;\njustify-content:center;\nflex-direction:column;\n&:hover{\n  background-color:goldenrod;\n  border-radius: 12px;\n}\n`\nconst Img = styled.img`\nwidth: 200px;\nborder-radius: 12px;\n`\n\nexport default class Shows extends React.Component {\n  state = {\n    shows: []\n  }\n\n  componentDidMount() {\n    this.getShows()\n  }\n\n  getShows = async () => {\n    const response = await ShowsApi.get()\n    this.setState({\n      shows: response.data.results\n    })\n    const poster = response.data.results.map(item => {\n      return {\n        ...item,\n        poster_path: `https://image.tmdb.org/t/p/w500${item.poster_path}`\n      };\n    });\n\n    this.setState({\n      shows: poster\n    });\n  }\n\n  render() {\n    const titleStyle = {\n      paddingLeft:\"6%\",\n      height:\"13vh\",\n      display:\"flex\",\n      alignItems:\"flex-end\"\n    }\n    return (\n      <>\n      <h2 style={titleStyle}>Popular Shows</h2>\n      <Div>\n        <GlobalStyle/>\n        {this.state.shows.map(\n          (item) => (\n            <Card key={item.id}>\n              <div>\n                <Img src={item.poster_path}/>\n              </div>\n              <div>\n                <h3>{item.name}</h3>\n              </div>\n            </Card>\n          )\n        )}\n      </Div>\n      </>\n    );\n  }\n}\n","import MoviesPage from './Components/RenderMovies/index.js'\nimport ShowsPage from './Components/RenderShows/index'\nimport HomePage from './Components/Home/index'\nimport styled from 'styled-components';\nimport React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nconst Menu = styled.nav`\nheight: 16vh;\ndisplay: flex;\nalign-items:flex-end;\njustify-content:center;\n`\nconst List = styled.ul`\nwidth:100%;\ndisplay: flex;\nalign-items:center;\njustify-content:space-evenly;\nlist-style: none;\nli{\n  font-size: 2rem;\n}\n`\nconst Title = styled.div`\nmargin: 3vh auto;\nfont-size: 25px;\nborder-bottom: solid 1px white;\ndisplay: flex;\nalign-items:center;\njustify-content:center;\n`\n\nexport default function App() {\n  const linkStyle = {\n    textDecoration: \"underline red\", \n    color:\"white\"\n  }\n  const titleStyle = {\n    color:\"red\",\n    textDecoration:\"none\"\n  }\n  return (\n    <Router>\n      <div>\n        <Title>\n        <h1>\n        <Link to=\"/DanFlix-react-app\" style={titleStyle}>DanFlix</Link>\n        </h1>\n        </Title>\n        <Menu>\n          <List>\n            <li>\n              <Link to=\"/home\" style={linkStyle}>Home</Link>\n            </li>\n            <li>\n              <Link to=\"/movies\" style={linkStyle}>Movies</Link>\n            </li>\n            <li>\n              <Link to=\"/shows\" style={linkStyle}>Shows</Link>\n            </li>\n          </List>\n        </Menu>\n\n        <Switch>\n          <Route path=\"/DanFlix-react-app\" exact={true}>\n            <HomePage/>\n          </Route>\n          <Route path=\"/home\">\n            <HomePage/>\n          </Route>\n          <Route path=\"/movies\">\n          <MoviesPage/>\n          </Route>\n          <Route path=\"/shows\">\n          <ShowsPage/>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}